--------------------------------------------------------
--  File created - Friday-May-31-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table APPUSER
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."APPUSER" 
   (	"APPUSERID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ISHIDDEN" NUMBER(*,0), 
	"USERNAME" VARCHAR2(50 BYTE), 
	"PASSWORD" VARCHAR2(50 BYTE), 
	"ISADMIN" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APPUSERPERMISSION
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."APPUSERPERMISSION" 
   (	"APPUSERPERMISSIONID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"APPUSERID" NUMBER, 
	"USERPERMISSION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BOOK
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."BOOK" 
   (	"BOOKID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ISHIDDEN" NUMBER(*,0), 
	"CATALOGID" NUMBER, 
	"BOOKCODE" VARCHAR2(50 BYTE), 
	"BOOKDESCRIPTION" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BORROW
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."BORROW" 
   (	"BORROWID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ISHIDDEN" NUMBER(*,0), 
	"CUSTOMERID" NUMBER, 
	"LIBRARIANID" NUMBER, 
	"BORROWDATE" DATE, 
	"BORROWCODE" VARCHAR2(50 BYTE), 
	"DEPOSITAMOUNT" NUMBER, 
	"DUEDATE" DATE, 
	"FINEAMOUNT" NUMBER, 
	"MEMO" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BORROWDETAIL
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."BORROWDETAIL" 
   (	"BORROWDETAILID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"BORROWID" NUMBER, 
	"BOOKID" NUMBER, 
	"NOTE" VARCHAR2(500 BYTE), 
	"ISRETURN" NUMBER(*,0), 
	"RETURNDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CATALOG
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."CATALOG" 
   (	"CATALOGID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ISHIDDEN" NUMBER(*,0), 
	"CATALOGCODE" VARCHAR2(50 BYTE), 
	"CATALOGNAME" VARCHAR2(200 BYTE), 
	"ISBN" VARCHAR2(50 BYTE), 
	"AUTHORNAME" VARCHAR2(200 BYTE), 
	"PUBLISHER" VARCHAR2(50 BYTE), 
	"PUBLISHYEAR" VARCHAR2(50 BYTE), 
	"PUBLISHEDITION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."CUSTOMER" 
   (	"CUSTOMERID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ISHIDDEN" NUMBER(*,0), 
	"CUSTOMERCODE" VARCHAR2(50 BYTE), 
	"CUSTOMERTYPEID" NUMBER, 
	"CUSTOMERNAME" VARCHAR2(50 BYTE), 
	"SEX" VARCHAR2(200 BYTE), 
	"DOB" DATE, 
	"POB" VARCHAR2(500 BYTE), 
	"PHONE" VARCHAR2(200 BYTE), 
	"ADDRESS" VARCHAR2(500 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMERTYPE
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."CUSTOMERTYPE" 
   (	"CUSTOMERTYPEID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CUSTOMERTYPENAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LIBRARIAN
--------------------------------------------------------

  CREATE TABLE "LIBRARY"."LIBRARIAN" 
   (	"LIBRARIANID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ISHIDDEN" NUMBER(*,0), 
	"LIBRARIANCODE" VARCHAR2(50 BYTE), 
	"LIBRARIANNAME" VARCHAR2(50 BYTE), 
	"SEX" VARCHAR2(1 BYTE), 
	"DOB" DATE, 
	"POB" VARCHAR2(500 BYTE), 
	"PHONE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into LIBRARY.APPUSER
SET DEFINE OFF;
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (1,null,'Admin','123',1);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (2,null,'Leuy edit','1234',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (28,1,'Hongli','123',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (21,0,'Lin','1234',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (22,1,'hongli','1234',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (23,0,'som','123',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (24,1,'sok','1234',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (25,1,'Nimol','1234',0);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (27,0,'admin','123',1);
Insert into LIBRARY.APPUSER (APPUSERID,ISHIDDEN,USERNAME,PASSWORD,ISADMIN) values (29,1,'Tom','1234',0);
REM INSERTING into LIBRARY.APPUSERPERMISSION
SET DEFINE OFF;
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (536,23,'CustomerCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (537,23,'CustomerModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (538,23,'CustomerDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (507,21,'BookCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (508,21,'BookView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (509,21,'LibrarianCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (510,21,'LibrarainModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (511,21,'LibrarianDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (512,21,'LibrarianView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (513,21,'CustomerTypeCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (514,21,'CustomerTypeModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (515,21,'CustomerTypeDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (516,21,'CustomerTypeView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (517,21,'CustomerCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (518,21,'CustomerModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (519,21,'CustomerDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (520,21,'CustomerView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (539,23,'CustomerView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (534,23,'BookCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (535,23,'BookView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (381,2,'BookDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (382,2,'BookView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (383,2,'LibrarianCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (384,2,'LibrarainModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (385,2,'LibrarianDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (386,2,'LibrarianView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (387,2,'CustomerTypeCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (388,2,'CustomerTypeModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (389,2,'CustomerTypeDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (390,2,'CustomerTypeView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (391,2,'CustomerCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (392,2,'CustomerModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (393,2,'CustomerDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (359,1,'BorrowCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (360,1,'BorrowModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (361,1,'BorrowDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (362,1,'BorrowView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (363,1,'BookCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (364,1,'BookModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (365,1,'BookDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (366,1,'BookView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (367,1,'LibrarianCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (368,1,'LibrarainModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (369,1,'LibrarianDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (370,1,'LibrarianView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (371,1,'CustomerTypeCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (372,1,'CustomerTypeModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (373,1,'CustomerTypeDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (374,1,'CustomerTypeView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (375,1,'CustomerCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (376,1,'CustomerModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (377,1,'CustomerDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (378,1,'CustomerView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (379,2,'BookCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (380,2,'BookModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (394,2,'CustomerView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (395,27,'BorrowCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (396,27,'BorrowModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (397,27,'BorrowDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (398,27,'BorrowView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (399,27,'BookCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (400,27,'BookModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (401,27,'BookDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (402,27,'BookView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (403,27,'LibrarianCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (404,27,'LibrarainModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (405,27,'LibrarianDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (406,27,'LibrarianView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (407,27,'CustomerTypeCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (408,27,'CustomerTypeModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (409,27,'CustomerTypeDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (410,27,'CustomerTypeView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (411,27,'CustomerCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (412,27,'CustomerModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (413,27,'CustomerDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (414,27,'CustomerView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (459,29,'CustomerTypeModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (460,29,'CustomerTypeDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (461,29,'CustomerTypeView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (462,29,'CustomerCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (463,29,'CustomerModify');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (464,29,'CustomerDelete');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (457,29,'BorrowView');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (458,29,'CustomerTypeCreate');
Insert into LIBRARY.APPUSERPERMISSION (APPUSERPERMISSIONID,APPUSERID,USERPERMISSION) values (465,29,'CustomerView');
REM INSERTING into LIBRARY.BOOK
SET DEFINE OFF;
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (205,0,46,'G1','GG');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (206,0,46,'G2','GGG');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (198,0,5,'A02','Good');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (199,0,5,'A03','BEst');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (202,0,49,'hhh','ppp');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (210,0,48,'Good','Best');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (211,0,48,'BBBB01','Good2');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (207,0,46,'G3','GGGG');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (195,0,47,'BB02','Good for ');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (196,0,47,'BB01','Good for reading');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (197,0,47,'BB04','great');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (194,0,47,'BB03','Good');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (157,0,42,'BBU','For Reading');
Insert into LIBRARY.BOOK (BOOKID,ISHIDDEN,CATALOGID,BOOKCODE,BOOKDESCRIPTION) values (158,0,42,'BBU1','For Sleeping');
REM INSERTING into LIBRARY.BORROW
SET DEFINE OFF;
Insert into LIBRARY.BORROW (BORROWID,ISHIDDEN,CUSTOMERID,LIBRARIANID,BORROWDATE,BORROWCODE,DEPOSITAMOUNT,DUEDATE,FINEAMOUNT,MEMO) values (53,0,50,22,to_date('28-MAY-24','DD-MON-RR'),'b002',12000,to_date('28-MAY-24','DD-MON-RR'),500,'n');
Insert into LIBRARY.BORROW (BORROWID,ISHIDDEN,CUSTOMERID,LIBRARIANID,BORROWDATE,BORROWCODE,DEPOSITAMOUNT,DUEDATE,FINEAMOUNT,MEMO) values (54,0,50,22,to_date('28-MAY-24','DD-MON-RR'),'iii9',888,to_date('01-JAN-01','DD-MON-RR'),0,'noy');
Insert into LIBRARY.BORROW (BORROWID,ISHIDDEN,CUSTOMERID,LIBRARIANID,BORROWDATE,BORROWCODE,DEPOSITAMOUNT,DUEDATE,FINEAMOUNT,MEMO) values (55,0,50,22,to_date('28-MAY-24','DD-MON-RR'),'j78',88,to_date('28-MAY-24','DD-MON-RR'),0,'ll');
Insert into LIBRARY.BORROW (BORROWID,ISHIDDEN,CUSTOMERID,LIBRARIANID,BORROWDATE,BORROWCODE,DEPOSITAMOUNT,DUEDATE,FINEAMOUNT,MEMO) values (51,0,50,22,to_date('08-MAY-24','DD-MON-RR'),'br098',15000,to_date('01-JAN-01','DD-MON-RR'),5000,'please return');
REM INSERTING into LIBRARY.BORROWDETAIL
SET DEFINE OFF;
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (134,51,194,null,1,to_date('12-DEC-24','DD-MON-RR'));
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (136,53,202,null,1,to_date('12-DEC-23','DD-MON-RR'));
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (135,51,194,null,1,to_date('12-DEC-24','DD-MON-RR'));
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (137,53,211,null,1,to_date('12-DEC-23','DD-MON-RR'));
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (142,55,196,'l',0,to_date('05-FEB-23','DD-MON-RR'));
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (140,54,196,null,1,to_date('12-FEB-23','DD-MON-RR'));
Insert into LIBRARY.BORROWDETAIL (BORROWDETAILID,BORROWID,BOOKID,NOTE,ISRETURN,RETURNDATE) values (141,54,195,null,1,to_date('12-FEB-23','DD-MON-RR'));
REM INSERTING into LIBRARY.CATALOG
SET DEFINE OFF;
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (48,0,'BB01','Perfact','123','Lomg','Leuy','2023','566');
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (49,0,null,'leuy','kkk88','kik','long','2023','8');
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (5,0,'PHP1ll','PHP edit','BBusr','Long','Leng','2025','6778888');
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (42,0,'bb89','Bopha','789563','Leuy','Long','2023','2 year');
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (47,0,'bb02','Book2','b12348','Linda','Bopha','2020','5');
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (46,0,'f','fj','45','ll','leuy','2023','56');
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (1,45,'d','Fo','kk','Leuy','256','2',null);
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (2,123,'Leuy','Leu','Long','Leuyllm','2025','5',null);
Insert into LIBRARY.CATALOG (CATALOGID,ISHIDDEN,CATALOGCODE,CATALOGNAME,ISBN,AUTHORNAME,PUBLISHER,PUBLISHYEAR,PUBLISHEDITION) values (3,456,'PHP','kkd','loe','Ong','2025','5',null);
REM INSERTING into LIBRARY.CUSTOMER
SET DEFINE OFF;
Insert into LIBRARY.CUSTOMER (CUSTOMERID,ISHIDDEN,CUSTOMERCODE,CUSTOMERTYPEID,CUSTOMERNAME,SEX,DOB,POB,PHONE,ADDRESS) values (50,0,'L123',22,'Lenglomg','M',to_date('28-MAY-24','DD-MON-RR'),'eoddor','0975894543','Sime r');
REM INSERTING into LIBRARY.CUSTOMERTYPE
SET DEFINE OFF;
Insert into LIBRARY.CUSTOMERTYPE (CUSTOMERTYPEID,CUSTOMERTYPENAME) values (22,'Student');
Insert into LIBRARY.CUSTOMERTYPE (CUSTOMERTYPEID,CUSTOMERTYPENAME) values (2,'Teacher');
REM INSERTING into LIBRARY.LIBRARIAN
SET DEFINE OFF;
Insert into LIBRARY.LIBRARIAN (LIBRARIANID,ISHIDDEN,LIBRARIANCODE,LIBRARIANNAME,SEX,DOB,POB,PHONE) values (22,0,'B123','Noch Nich','F',to_date('28-MAY-24','DD-MON-RR'),'SiemReap','087367483');
--------------------------------------------------------
--  DDL for Procedure APPUSERADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERADD" (
P_Username      AppUser.UserName%Type,
P_UserPassword  AppUser.Password%Type)
As
Begin Insert Into AppUser(isHidden,Username,Password,IsAdmin) Values(0,P_UserName,P_UserPassword,0);
Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure APPUSERDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERDELETE" 
(
    P_appuserid       appuser.appuserid%Type
)
As
Begin
    update appuser set ishidden = 1 where appuserid = P_appuserid;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure APPUSERGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERGET" (P_AppUserId    AppUser.AppUserId%Type Default 0)
As 
C_AppUser Sys_RefCursor;
Begin 
If P_AppUserId = 0 Then 
Open C_AppUser For Select * From AppUser where ishidden = 0;
Else Open C_AppUser For Select * From AppUser Where AppUserId = P_AppUserId; 
End If;
DBMS_SQL.return_result(C_AppUser);End;

/
--------------------------------------------------------
--  DDL for Procedure APPUSERLOGIN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERLOGIN" (
P_Username    AppUser.Username%Type,
P_UserPassword  AppUser.Password%Type)
As C_AppUser      Sys_RefCursor;
Begin
Open C_AppUser For Select * From AppUser Where Upper(Username) = Upper(P_Username) And Password = P_UserPassword;
DBMS_SQL.return_result(C_AppUser);
End;

/
--------------------------------------------------------
--  DDL for Procedure APPUSERPERMISSIONADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERPERMISSIONADD" (
    P_appuserid      appuserpermission.appuserid%Type,
    P_userpermission             appuserpermission.userpermission%Type
   
)
As
Begin
    Insert Into appuserpermission(appuserid, userpermission) 
    Values(P_appuserid,P_userpermission);
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure APPUSERPERMISSIONDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERPERMISSIONDELETE" 
(
    P_appuserid       appuserpermission.appuserid%Type
)
As
Begin
    Delete From appuserpermission Where appuserid = P_appuserid;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure APPUSERPERMISSIONGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERPERMISSIONGET" 
(
    P_appuserid    appuserpermission.appuserid%Type Default 0
)
As
    C_appuserpermission Sys_RefCursor;
Begin
    If(P_appuserid = 0) Then
        Open C_appuserpermission For Select * From appuserpermission;
    Else
        Open C_appuserpermission For Select * From appuserpermission Where appuserid = P_appuserid;
    End If;
    DBMS_SQL.return_result(C_appuserpermission);
End;

/
--------------------------------------------------------
--  DDL for Procedure APPUSERPERMISSIONUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERPERMISSIONUPDATE" (
    P_appuserpermissionid        appuserpermission.appuserpermissionid%Type,
    P_appuserid      appuserpermission.appuserid%Type,
    P_userpermission             appuserpermission.userpermission%Type

)
As
Begin
    Update appuserpermission
        Set
        appuserid = P_appuserid,
        userpermission = P_userpermission

    Where appuserpermissionid = P_appuserpermissionid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure APPUSERUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."APPUSERUPDATE" (
    P_appuserid        appuser.appuserid%Type,
    P_username             appuser.username%Type,
    P_password             appuser.password%Type

)
As
Begin
    Update appuser
        Set
        username = P_username,
        password =P_password     

    Where appuserid = P_appuserid;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure BOOKADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BOOKADD" (
    P_catalogid             book.catalogid%Type,
    P_bookcode             book.bookcode%Type,
    P_bookdescription           book.bookdescription%Type
)
As
Begin
    Insert Into book(ishidden, catalogid, bookcode, bookdescription) 
    Values(0,P_catalogid,P_bookcode,P_bookdescription);
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure BOOKDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BOOKDELETE" 
(
    P_catalogid        book.catalogid%Type
)
As
Begin
    Delete From book Where catalogid = P_catalogid;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure BOOKGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BOOKGET" 
(
    P_catalogid    book.catalogid%Type Default 0
)
As
    C_book Sys_RefCursor;
Begin
    If(P_catalogid = 0) Then
        Open C_book For Select * From book;
    Else
        Open C_book For Select * From book Where catalogid = P_catalogid;
    End If;
    DBMS_SQL.return_result(C_book);
End;

/
--------------------------------------------------------
--  DDL for Procedure BOOKGETNOTRETURN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BOOKGETNOTRETURN" 

As
    C_book Sys_RefCursor;
Begin
    Open C_book For select b.* from book b left outer join borrowdetail br on br.bookid = b.bookid where br.isreturn = 1 or br.isreturn is null;
    DBMS_SQL.return_result(C_book);
End;

/
--------------------------------------------------------
--  DDL for Procedure BOOKUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BOOKUPDATE" (
    P_bookid        book.bookid%Type,
    P_ishidden      book.ishidden%Type,
    P_catalogid             book.catalogid%Type,
    P_bookcode             book.bookcode%Type,
    P_bookdescription           book.bookdescription%Type
)
As
Begin
    Update book
        Set
        ishidden = P_ishidden,
        catalogid = P_catalogid,
        bookcode = P_bookcode,
        bookdescription = P_bookdescription
    Where bookid = P_bookid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure BORROWADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWADD" (
    P_customerid             borrow.customerid%Type,
    P_librarianid             borrow.librarianid%Type,
    P_borrowdate           borrow.borrowdate%Type,
    P_borrowcode           borrow.borrowcode%Type,
    P_depositamount           borrow.depositamount%Type,
    P_duedate           borrow.duedate%Type,
    P_fineamount           borrow.fineamount%Type,
    P_memo           borrow.memo%Type,
    P_borrowid      out borrow.borrowid%TYPE
)
As
Begin
    Insert Into borrow(ishidden, customerid, librarianid, borrowdate,borrowcode,depositamount,duedate,fineamount,memo) 
    Values(0,P_customerid,P_librarianid,P_borrowdate,P_borrowcode,P_depositamount,P_duedate,P_fineamount,P_memo)
    Returning borrowid INTO P_borrowid;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure BORROWDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWDELETE" 
(
    P_borrowid        borrow.borrowid%Type
)
As
Begin
    Delete From borrow Where borrowid = P_borrowid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure BORROWDETAILADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWDETAILADD" (
    P_borrowid      Borrowdetail.borrowid%Type,
    P_bookid       Borrowdetail.bookid%Type,
    P_note             Borrowdetail.note%Type,
    P_isreturn             Borrowdetail.isreturn%Type,
    P_returndate           Borrowdetail.returndate%Type
)
As
Begin
    Insert Into Borrowdetail(borrowid, bookid, note, isreturn, returndate) 
    Values(P_borrowid,P_bookid,P_note,P_isreturn,P_returndate);
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure BORROWDETAILDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWDETAILDELETE" 
(
    P_borrowId        borrowdetail.borrowid%Type
)
As
Begin
    Delete From borrowdetail Where borrowId = P_borrowId;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure BORROWDETAILGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWDETAILGET" 
(
    P_borrowid    borrow.borrowid%Type Default 0
)
As
    C_borrowdetail Sys_RefCursor;
Begin
    If(P_borrowid = 0) Then
        Open C_borrowdetail For Select * From borrowdetail;
    Else
        Open C_borrowdetail For Select * From borrowdetail Where borrowid = P_borrowid;
    End If;
    DBMS_SQL.return_result(C_borrowdetail);
End;

/
--------------------------------------------------------
--  DDL for Procedure BORROWDETAILUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWDETAILUPDATE" (
    P_borrowdetailid        Borrowdetail.borrowdetailid%Type,
    P_Borrowid      Borrowdetail.Borrowid%Type,
    P_bookid       Borrowdetail.bookid%Type,
    P_note             Borrowdetail.note%Type,
    P_isreturn             Borrowdetail.isreturn%Type,
    P_returndate           Borrowdetail.returndate%Type
)
As
Begin
    Update borrowdetail
        Set
        borrowid = P_borrowid,
        bookid = P_bookid,
        note = P_note,
        isreturn = P_isreturn,
        returndate = P_returndate
    Where borrowdetailid = P_borrowdetailid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure BORROWGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWGET" 
(
    P_borrowid    borrow.borrowid%Type Default 0
)
As
    C_borrow Sys_RefCursor;
Begin
    If(P_borrowid = 0) Then
        Open C_borrow For Select * From borrow;
    Else
        Open C_borrow For Select * From borrow Where borrowid = P_borrowid;
    End If;
    DBMS_SQL.return_result(C_borrow);
End;


/
--------------------------------------------------------
--  DDL for Procedure BORROWUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."BORROWUPDATE" (
    P_borrowid        borrow.borrowid%Type,
    P_ishidden      borrow.ishidden%Type,
    P_customerid             borrow.customerid%Type,
    P_librarianid             borrow.librarianid%Type,
    P_borrowdate           borrow.borrowdate%Type,
    P_borrowcode           borrow.borrowcode%Type,
    P_depositamount           borrow.depositamount%Type,
    P_duedate           borrow.duedate%Type,
    P_fineamount           borrow.fineamount%Type,
    P_memo           borrow.memo%Type
)
As
Begin
    Update borrow
        Set
        ishidden = P_ishidden,
        customerid = P_customerid,
        librarianid = P_librarianid,
        borrowdate = P_borrowdate,
        borrowcode = P_borrowcode,
        depositamount =  P_depositamount,
        duedate = P_duedate,
        fineamount = P_fineamount,
        memo = P_memo

    Where borrowid = P_borrowid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CATALOGADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CATALOGADD" (
    P_ishidden      catalog.ishidden%Type,
    P_catalogcode             catalog.catalogcode%Type,
    P_catalogname             catalog.catalogname%Type,
    P_isbn           catalog.isbn%Type,
    P_authorname           catalog.authorname%Type,
    P_publisher           catalog.publisher%Type,
    P_publishyear           catalog.publishyear%Type,
    P_publishedition           catalog.publishedition%Type,
    P_CatalogId    out catalog.catalogid%Type
)
As
Begin
    Insert Into catalog(ishidden, catalogcode, catalogname, isbn,authorname,publisher,publishyear,publishedition) 
    Values(P_ishidden,P_catalogcode,P_catalogname,P_isbn,P_authorname,P_publisher,P_publishyear,P_publishedition)
Returning CatalogId into P_CatalogId;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure CATALOGDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CATALOGDELETE" 
(
    P_catalogid        catalog.catalogid%Type
)
As
Begin
    Delete From catalog Where catalogid = P_catalogid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CATALOGGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CATALOGGET" 
(
    P_catalogid    catalog.catalogid%Type Default 0
)
As
    C_catalog Sys_RefCursor;
Begin
    If(P_catalogid = 0) Then
        Open C_catalog For Select * From catalog where ishidden = 0;
    Else
        Open C_catalog For Select * From catalog Where catalogid = P_catalogid and ishidden = 0;
    End If;
    DBMS_SQL.return_result(C_catalog);
End;

/
--------------------------------------------------------
--  DDL for Procedure CATALOGUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CATALOGUPDATE" (
    P_catalogid        catalog.catalogid%Type,
    P_catalogcode             catalog.catalogcode%Type,
    P_catalogname             catalog.catalogname%Type,
    P_isbn           catalog.isbn%Type,
    P_authorname           catalog.authorname%Type,
    P_publisher           catalog.publisher%Type,
    P_publishyear           catalog.publishyear%Type,
    P_publishedition           catalog.publishedition%Type
)
As
Begin
    Update catalog
        Set
        catalogcode = P_catalogcode,
        catalogname = P_catalogname,
        isbn = P_isbn,
        authorname = P_authorname,
        publisher =  P_publisher,
        publishyear = P_publishyear,
        publishedition = P_publishedition

    Where catalogid = P_catalogid;
    Commit;
End;

/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERADD" (
    P_ishidden      customer.ishidden%Type,
    P_customercode             customer.customercode%Type,
    P_customertypeid             customer.customertypeid%Type,
    P_customername             customer.customername%Type,
    P_sex           customer.sex%Type,
    P_dob           customer.dob%Type,
    P_pob           customer.pob%Type,
    P_phone           customer.phone%Type,
    P_address           customer.address%Type
   
    
)
As
Begin
    Insert Into customer(ishidden, customercode,customertypeid, customername, sex,dob,pob,phone,address) 
    Values(P_ishidden,P_customercode,P_customertypeid,P_customername,P_sex,P_dob,P_pob,P_phone,P_address);
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERDELETE" 
(
    P_customerid        customer.customerid%Type
)
As
Begin
    Delete From customer Where customerid = P_customerid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERGET" 
(
    P_customerid    customer.customerid%Type Default 0
)
As
    C_customer Sys_RefCursor;
Begin
    If(P_customerid = 0) Then
        Open C_customer For Select * From customer  where ishidden = 0;
    Else
        Open C_customer For Select * From customer Where customerid = P_customerid and ishidden = 0;
    End If;
    DBMS_SQL.return_result(C_customer);
End;

/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERTYPEADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERTYPEADD" (
    P_customertypename      customertype.customertypename%Type
    
   
)
As
Begin
    Insert Into customertype(customertypename) 
    Values(P_customertypename);
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERTYPEDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERTYPEDELETE" 
(
    P_customertypeid       customertype.customertypeid%Type
)
As
Begin
    Delete From customertype Where customertypeid = P_customertypeid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERTYPEGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERTYPEGET" 
(
    P_customertypeid    customertype.customertypeid%Type Default 0
)
As
    C_customertype Sys_RefCursor;
Begin
    If(P_customertypeid = 0) Then
        Open C_customertype For Select * From customertype;
    Else
        Open C_customertype For Select * From customertype Where customertypeid = P_customertypeid;
    End If;
    DBMS_SQL.return_result(C_customertype);
End;


/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERTYPEUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERTYPEUPDATE" (
    P_customertypeid        customertype.customertypeid%Type,
    P_customertypename      customertype.customertypename%Type


)
As
Begin
    Update customertype
        Set
        customertypename = P_customertypename

    Where customertypeid = P_customertypeid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure CUSTOMERUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."CUSTOMERUPDATE" (
    P_customerid        customer.customerid%Type,
    P_ishidden      customer.ishidden%Type,
    P_customercode             customer.customercode%Type,
    P_customertypeid             customer.customertypeid%Type,
    P_customername             customer.customername%Type,
    P_sex           customer.sex%Type,
    P_dob           customer.dob%Type,
    P_pob           customer.pob%Type,
    P_phone           customer.phone%Type,
    P_address           customer.address%Type
   
)
As
Begin
    Update customer
        Set
        ishidden = P_ishidden,
        customercode = P_customercode,
        customertypeid =P_customertypeid,
        customername = P_customername,
        sex = P_sex,
        dob = P_dob,
        pob =  P_pob,
        phone = P_phone,
        address = P_address


    Where customerid = P_customerid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure LIBRARIANADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."LIBRARIANADD" (
    P_ishidden      librarian.ishidden%Type,
    P_librariancode             librarian.librariancode%Type,
    P_librarianname             librarian.librarianname%Type,
    P_sex           librarian.sex%Type,
    P_dob           librarian.dob%Type,
    P_pob           librarian.pob%Type,
    P_phone           librarian.phone%Type
    
)
As
Begin
    Insert Into librarian(ishidden, librariancode, librarianname, sex,dob,pob,phone) 
    Values(P_ishidden,P_librariancode,P_librarianname,P_sex,P_dob,P_pob,P_phone);
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure LIBRARIANDELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."LIBRARIANDELETE" 
(
    P_librarianid       librarian.librarianid%Type
)
As
Begin
    Delete From librarian Where librarianid = P_librarianid;
    Commit;
End;


/
--------------------------------------------------------
--  DDL for Procedure LIBRARIANGET
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."LIBRARIANGET" 
(
    P_librarianid    librarian.librarianid%Type Default 0
)
As
    C_librarian Sys_RefCursor;
Begin
    If(P_librarianid = 0) Then
        Open C_librarian For Select * From librarian where ishidden = 0;
    Else
        Open C_librarian For Select * From librarian Where librarianid = P_librarianid and ishidden = 0;
    End If;
    DBMS_SQL.return_result(C_librarian);
End;

/
--------------------------------------------------------
--  DDL for Procedure LIBRARIANUPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "LIBRARY"."LIBRARIANUPDATE" (
    P_librarianid        librarian.librarianid%Type,
    P_ishidden      librarian.ishidden%Type,
    P_librariancode             librarian.librariancode%Type,
    P_librarianname             librarian.librarianname%Type,
    P_sex           librarian.sex%Type,
    P_dob           librarian.dob%Type,
    P_pob           librarian.pob%Type,
    P_phone           librarian.phone%Type
    
)
As
Begin
    Update librarian
        Set
        ishidden = P_ishidden,
        librariancode = P_librariancode,
        librarianname = P_librarianname,
        sex = P_sex,
        dob = P_dob,
        pob =  P_pob,
        phone = P_phone


    Where librarianid = P_librarianid ;
    Commit;
End;

/
--------------------------------------------------------
--  Constraints for Table BOOK
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."BOOK" MODIFY ("BOOKID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."BOOK" ADD PRIMARY KEY ("BOOKID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CATALOG
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."CATALOG" MODIFY ("CATALOGID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."CATALOG" ADD PRIMARY KEY ("CATALOGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LIBRARIAN
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."LIBRARIAN" MODIFY ("LIBRARIANID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."LIBRARIAN" ADD PRIMARY KEY ("LIBRARIANID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BORROWDETAIL
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."BORROWDETAIL" MODIFY ("BORROWDETAILID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."BORROWDETAIL" ADD PRIMARY KEY ("BORROWDETAILID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."CUSTOMER" MODIFY ("CUSTOMERID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."CUSTOMER" ADD PRIMARY KEY ("CUSTOMERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table APPUSERPERMISSION
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."APPUSERPERMISSION" MODIFY ("APPUSERPERMISSIONID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."APPUSERPERMISSION" ADD PRIMARY KEY ("APPUSERPERMISSIONID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BORROW
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."BORROW" MODIFY ("BORROWID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."BORROW" ADD PRIMARY KEY ("BORROWID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table APPUSER
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."APPUSER" MODIFY ("APPUSERID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."APPUSER" ADD PRIMARY KEY ("APPUSERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMERTYPE
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."CUSTOMERTYPE" MODIFY ("CUSTOMERTYPEID" NOT NULL ENABLE);
  ALTER TABLE "LIBRARY"."CUSTOMERTYPE" ADD PRIMARY KEY ("CUSTOMERTYPEID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APPUSERPERMISSION
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."APPUSERPERMISSION" ADD FOREIGN KEY ("APPUSERID")
	  REFERENCES "LIBRARY"."APPUSER" ("APPUSERID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BOOK
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."BOOK" ADD FOREIGN KEY ("CATALOGID")
	  REFERENCES "LIBRARY"."CATALOG" ("CATALOGID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BORROW
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."BORROW" ADD FOREIGN KEY ("CUSTOMERID")
	  REFERENCES "LIBRARY"."CUSTOMER" ("CUSTOMERID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "LIBRARY"."BORROW" ADD FOREIGN KEY ("LIBRARIANID")
	  REFERENCES "LIBRARY"."LIBRARIAN" ("LIBRARIANID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BORROWDETAIL
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."BORROWDETAIL" ADD FOREIGN KEY ("BORROWID")
	  REFERENCES "LIBRARY"."BORROW" ("BORROWID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "LIBRARY"."BORROWDETAIL" ADD FOREIGN KEY ("BOOKID")
	  REFERENCES "LIBRARY"."BOOK" ("BOOKID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CUSTOMER
--------------------------------------------------------

  ALTER TABLE "LIBRARY"."CUSTOMER" ADD FOREIGN KEY ("CUSTOMERTYPEID")
	  REFERENCES "LIBRARY"."CUSTOMERTYPE" ("CUSTOMERTYPEID") ON DELETE CASCADE ENABLE;
